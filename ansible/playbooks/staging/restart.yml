---
- name: 'Get droplet IP'
  hosts: localhost
  tasks:
  # Gather facts
  - name: 'Include global vars'
    include_vars:
      dir: ./../../vars/global
  - name: 'Include environment vars'
    include_vars:
      dir: ./../../vars/{{ env }}
  - name: "Get droplet IP"
    command: "./../terraform output ip"
    args:
        chdir: "./../../../staging/{{ STAGING_PREFIX }}"
    register: terraform_config
  - add_host:
      env: "staging"
      hostname: "staging"
      ansible_connection: "ssh"
      ansible_host: "{{ terraform_config.stdout }}"
      ansible_ssh_pass: "{{ SERVER_APP_USER_PASS }}"
      ansible_port: 22
      ansible_python_interpreter: "/usr/bin/python3"
- name: 'Connect to droplet and run commands'
  hosts: "staging"
  remote_user: "app_user"
  gather_facts: no
  tasks:
    - name: 'Run local-restart'
      command: "make local-restart inventory=staging"
      args:
        chdir: "/home/app_user/project"
    - name: 'Get docker status info'
      command: "make docker-status"
      args:
        chdir: "/home/app_user/project"
      register: docker_status
    - debug:
        var: docker_status.stdout_lines