---
- name: 'Generate css/js assets files'
  hosts: localhost
  tasks:
    # Gather facts
    - name: 'Include global vars'
      include_vars:
        dir: ./../../vars/global
    - name: 'Include environment vars'
      include_vars:
        dir: ./../../vars/{{ env }}

    # Generate assets
    - name: 'Rum make local-npm-prod'
      command: "make local-npm-prod inventory=production"
      args:
        chdir: "./../../../"
    - add_host:
        env: "production"
        hostname: "production_app"
        ansible_connection: "ssh"
        ansible_host: "{{ PRODUCTION_SERVER_IP }}"
        ansible_port: "{{ PRODUCTION_SERVER_PORT }}"
        ansible_ssh_pass: "{{ SERVER_APP_USER_PASS }}"
        ansible_sudo_pass: "{{ SERVER_APP_USER_PASS }}"
        ansible_python_interpreter: "/usr/bin/python3"
- name: 'Connect to production server and run commands'
  hosts: "production_app"
  remote_user: "app_user"
  tasks:
    # Gather facts
    - name: 'Include global vars'
      include_vars:
        dir: ./../../vars/global
    - name: 'Include environment vars'
      include_vars:
        dir: ./../../vars/{{ env }}
    - name: "Git pull"
      git:
        repo: "https://{{ BITBACKET_USER }}:{{ BITBACKET_PASSWORD }}@bitbucket.org/{{ BITBACKET_VENDOR }}/{{ BITBACKET_PROJECT_NAME }}.git"
        dest: "/home/app_user/project"
        version: "{{ GIT_VERSION }}"
        update: yes
        force: yes
    - name: 'Run local-up'
      command: "make local-up inventory=production"
      args:
        chdir: "/home/app_user/project"
    - name: 'Get docker status info'
      command: "make docker-status"
      args:
        chdir: "/home/app_user/project"
      register: docker_status
    - debug:
        var: docker_status.stdout_lines
    - name: 'Run local-composer-install'
      when: WITHOUT_COMPOSER == true
      command: "make local-composer-install inventory=production"
      args:
        chdir: "/home/app_user/project"
    - name: 'Run local-october-up'
      command: "make local-october-up inventory=production"
      args:
        chdir: "/home/app_user/project"
    - name: 'Create theme/assets folder'
      file:
        path: "/home/app_user/project/app/themes/{{THEME_NAME}}/assets"
        state: directory
    - name: 'Copy files'
      copy:
        src: "./../../../app/themes/{{THEME_NAME}}/assets/{{ item }}"
        dest: "/home/app_user/project/app/themes/{{THEME_NAME}}/assets"
      with_items:
        - css
        - js
        - mix-manifest.json
    - name: 'Apply chown command'
      file:
        path: '/home/app_user/project'
        owner: app_user
        group: app_user
        recurse: yes
      become: true
      become_user: root